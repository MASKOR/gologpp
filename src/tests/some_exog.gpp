 /*************************************************************************
 * This file is part of golog++.
 *
 * golog++ is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * golog++ is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with golog++.  If not, see <https://www.gnu.org/licenses/>.
**************************************************************************/

string fluent s1()
{ initially: () = null; }

string fluent s2()
{ initially: () = null; }

number fluent n1()
{ initially: () = null; }

number fluent nested(string s)
{ initially: (s) = 0; }

bool fluent exog_happened()
{ initially: () = false; }

string exog_function ef_s1(number a, number b);


exog_action ea(number n, string s) {
effect:
	exog_happened() = true;
	s1() = s;
	n1() = n;
	nested(s) = n;
}


action sense_s2(number ef_arg1, number ef_arg2) {
senses:
	s2() = ef_s1(ef_arg1, ef_arg2);
}

bool function postcond() =
	s1() != null
	& nested(s1()) == n1()
	& s2() != null


procedure main()
{
	test(exog_happened());
	sense_s2(1,2);
	s2() = ef_s1(1,2);
}
